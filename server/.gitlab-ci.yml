stages:
  - Build
  - Package


before_script:
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)
  - export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
  - >
    if [ -z "$CROSS_CLOUD_YML" ]; then
       if [ "$BASE_URL" == "https://gitlab.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/production/cross-cloud.yml"
       elif [ "$BASE_URL" == "https://gitlab.staging.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/staging/cross-cloud.yml"
       elif [ "$BASE_URL" == "https://gitlab.cidev.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/integration/cross-cloud.yml"
       else
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/master/cross-cloud.yml"
       fi
    else
      export CROSS_CLOUD_YML="$CROSS_CLOUD_YML"
    fi
  - source /opt/local/etc/rvmrc ; source /opt/local/etc/profile.d/rvm.sh ; cp -a /opt/local/dashboard /dashboard ; pushd /dashboard ; source /opt/local/.env ; ./bin/update_dashboard ; popd

compile:
  image: crosscloudci/debian-docker-go:latest
  stage: Build
  variables:
    CGO_ENABLED: '1'
  script:
    - >
      if [ "$ARCH" == "arm64" ]; then
        echo 'ARCH set to arm64'
        make promu
        promu crossbuild -v
      else
        echo 'Default to amd64 (Intel)'
        # ln -s /builds /go/src/github.com
        # cd /go/src/github.com/prometheus/prometheus
        if [ "$CI_COMMIT_REF_NAME" != "master" ]; then
          GO111MODULE=on go mod download 
        else
          make -j $(getconf _NPROCESSORS_ONLN) deps
        fi
        make -j $(getconf _NPROCESSORS_ONLN) build
        make -j $(getconf _NPROCESSORS_ONLN) test
      fi
    #- sed -i -e "\$areplace git.apache.org/thrift.git => github.com/apache/thrift v0.0.0-20180902110319-2566ecd5d999" ./go.mod
    #- sed -i '5s|.*|github.com/apache/thrift v0.0.0-20180902110319-2566ecd5d999/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=|' ./go.sum
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks


container:
  stage: Package
  image: crosscloudci/debian-docker
  script:
    - apt update && apt install -y make
    - IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}
    - >
      if [ "$ARCH" == "arm64" ]; then
        echo 'ARCH set to arm64'
        docker run --privileged linuxkit/binfmt:v0.6
        make -j $(getconf _NPROCESSORS_ONLN) docker DOCKER_REPO="$CI_REGISTRY" DOCKER_IMAGE_NAME="$CI_PROJECT_NAME/$CI_PROJECT_NAME" DOCKER_IMAGE_TAG="$IMAGE_TAG" DOCKER_ARCHS="arm64"
        echo export IMAGE_ARGS=\"--set server.image.repository=$CI_REGISTRY_IMAGE-linux-arm64\" | tee release.env
        echo export TAG_ARGS=\"--set server.image.tag=$IMAGE_TAG\" | tee -a release.env
        docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
        docker push "$CI_REGISTRY_IMAGE-linux-arm64:$IMAGE_TAG"
      else
        echo 'Default to amd64 (Intel)'
        make -j $(getconf _NPROCESSORS_ONLN) docker DOCKER_REPO="$CI_REGISTRY" DOCKER_IMAGE_NAME="$CI_PROJECT_NAME/$CI_PROJECT_NAME" DOCKER_IMAGE_TAG="$IMAGE_TAG" DOCKER_ARCHS="amd64"
        echo export IMAGE_ARGS=\"--set server.image.repository=$CI_REGISTRY_IMAGE-linux-amd64\" | tee release.env
        echo export TAG_ARGS=\"--set server.image.tag=$IMAGE_TAG\" | tee -a release.env
        docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
        docker push "$CI_REGISTRY_IMAGE-linux-amd64:$IMAGE_TAG"
      fi
    - cat release.env
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - release.env
